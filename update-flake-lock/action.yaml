---
name: "Update Flake Lock Files"
description: "An action to update flake.lock files in a repository."

inputs:
  update-branch:
    description: "Branch name for updates"
    required: false
    default: "update-flake-lock"
  main-branch:
    description: "Branch to base off of."
    required: false
    default: "main"
  checks-required:
    description: List of comma separated required checks to pass before merging
    required: false
    default: ""
  github-token:
    description: "GitHub token for authentication"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@v19

    - name: Checkout repository
      if: ${{ !env.ACT }}
      uses: actions/checkout@v5
      with:
        ref: ${{ inputs.main-branch }}
        token: ${{ inputs.github-token || github.token }}

    - name: Checkout repository
      if: ${{ env.ACT }}
      uses: actions/checkout@v5
      with:
        token: ${{ inputs.github-token || github.token }}

    - name: Install Nushell
      shell: bash
      run: |
        nix profile install nixpkgs#nushell

    - name: Install GH
      if: ${{ env.ACT }}
      shell: bash
      run: |
        nix profile install nixpkgs#gh

    - name: Setup Git Config
      shell: bash
      run: |
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "${{ github.actor }}@users.noreply.github.com"
        git fetch --all

    - name: Set Remote URL with Token
      if: ${{ env.ACT }}
      shell: bash
      run: |
        git remote set-url origin https://x-access-token:${{ inputs.github-token || github.token }}@github.com/${{ github.repository }}

    - name: Update Flake Locks
      shell: nu {0}
      env:
        GH_TOKEN: ${{ inputs.github-token || github.token }}
        GITHUB_TOKEN: ${{ inputs.github-token || github.token }}
      run: |
        source ${{ github.action_path }}/modules/mod.nu

        let checks_required = if ("${{ inputs.checks-required }}" | is-empty) {
          []
        } else {
          "${{ inputs.checks-required }}" | str split ","
        }

        update-flake-locks "${{ inputs.update-branch }}" "${{ inputs.main-branch }}" $checks_required
